name: Deploy Infrastructure
run-name: Deploy Infrastructure
on:
  workflow_call:
    inputs:
      stage:
        description: "Stage for environment (dev, stage, prod)"
        required: true
        type: string
        default: "dev"

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set AWS Region and Assume Role based on Stage
        id: set-aws-vars
        run: |
          if [ "${{ inputs.stage }}" == "dev" ]; then
            echo "AWS_REGION=${{ secrets.AWS_REGION_DEV }}" >> "$GITHUB_ENV"
            echo "AWS_ROLE_ARN=${{ secrets.AWS_ROLE_ARN_DEV }}" >> "$GITHUB_ENV"
          elif [ "${{ inputs.stage }}" == "qa" ]; then
            echo "AWS_REGION=${{ secrets.AWS_REGION_QA }}" >> "$GITHUB_ENV"
            echo "AWS_ROLE_ARN=${{ secrets.AWS_ROLE_ARN_QA }}" >> "$GITHUB_ENV"
          fi

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Terraform format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: ${{ vars.TERRAFORM_BUCKET_NAME }}-${{ inputs.stage }}
          AWS_BUCKET_KEY_NAME: ${{ vars.TERRAFORM_BUCKET_KEY_NAME }}-${{ inputs.stage }}
        run: |
          cd ./IaC
          terraform init --backend-config="bucket=${AWS_BUCKET_NAME}" --backend-config="key=${AWS_BUCKET_KEY_NAME}" --backend-config="region=${AWS_REGION}"

      - name: Terraform plan
        id: plan
        run: |
          cd ./IaC
          terraform plan -out=tfplan

      - name: Terraform apply
        id: apply
        run: |
          cd ./IaC
          terraform apply -auto-approve tfplan
